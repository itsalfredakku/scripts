#!/bin/bash
#
# Script: install_gnome_linux.sh
# Description: Automated GNOME desktop environment installation for Linux
# Author: Generated by GitHub Copilot
# Date: May 26, 2025
#

# Exit on any error
set -e

# Define log file
LOG_FILE="/var/log/gnome_install_$(date +%Y%m%d_%H%M%S).log"
VERBOSE=false

# Check for root privileges
check_root() {
    if [ "$(id -u)" -ne 0 ]; then
        echo "ERROR: This script must be run as root" | tee -a "$LOG_FILE"
        exit 1
    fi
}

# Function to log messages
log() {
    local message="$1"
    local timestamp
    timestamp=$(date "+%Y-%m-%d %H:%M:%S")
    echo "[$timestamp] $message" >> "$LOG_FILE"
    
    if [ "$VERBOSE" = true ]; then
        echo "[$timestamp] $message"
    fi
}

# Function to detect Linux distribution
detect_distro() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        DISTRO="$ID"
        VERSION="$VERSION_ID"
    elif [ -f /etc/lsb-release ]; then
        . /etc/lsb-release
        DISTRO="$DISTRIB_ID"
        VERSION="$DISTRIB_RELEASE"
    elif [ -f /etc/debian_version ]; then
        DISTRO="debian"
        VERSION=$(cat /etc/debian_version)
    else
        DISTRO="unknown"
        VERSION="unknown"
    fi
    
    DISTRO=$(echo "$DISTRO" | tr '[:upper:]' '[:lower:]')
    log "Detected distribution: $DISTRO $VERSION"
}

# Function to install GNOME on Ubuntu/Debian-based systems
install_gnome_debian() {
    log "Installing GNOME on Debian/Ubuntu..."
    
    # Update package lists
    apt-get update -y || {
        log "ERROR: Failed to update package lists"
        exit 1
    }
    
    # Install GNOME desktop environment
    if [ "$MINIMAL" = true ]; then
        log "Installing minimal GNOME desktop..."
        apt-get install -y gnome-shell gnome-terminal gnome-control-center gnome-tweaks || {
            log "ERROR: Failed to install minimal GNOME desktop"
            exit 1
        }
    else
        log "Installing full GNOME desktop..."
        apt-get install -y gnome-shell ubuntu-gnome-desktop gnome-tweaks || {
            log "ERROR: Failed to install full GNOME desktop"
            exit 1
        }
    fi
    
    # Set GNOME as default desktop
    update-alternatives --set x-session-manager /usr/bin/gnome-session || log "Warning: Failed to set GNOME as default session"
    
    log "GNOME installation completed successfully on Debian/Ubuntu"
}

# Function to install GNOME on Fedora/RHEL-based systems
install_gnome_fedora() {
    log "Installing GNOME on Fedora/RHEL-based system..."
    
    # Update packages
    dnf update -y || {
        log "ERROR: Failed to update packages"
        exit 1
    }
    
    # Install GNOME desktop environment
    if [ "$MINIMAL" = true ]; then
        log "Installing minimal GNOME desktop..."
        dnf install -y @gnome-desktop-environment || {
            log "ERROR: Failed to install minimal GNOME desktop"
            exit 1
        }
    else
        log "Installing full GNOME desktop..."
        dnf groupinstall -y "GNOME Desktop" || {
            log "ERROR: Failed to install GNOME desktop"
            exit 1
        }
    fi
    
    # Set default target to graphical
    systemctl set-default graphical.target || log "Warning: Failed to set default target to graphical"
    
    log "GNOME installation completed successfully on Fedora/RHEL"
}

# Function to install GNOME on Arch Linux
install_gnome_arch() {
    log "Installing GNOME on Arch Linux..."
    
    # Update package database
    pacman -Syu --noconfirm || {
        log "ERROR: Failed to update package database"
        exit 1
    }
    
    # Install GNOME desktop environment
    if [ "$MINIMAL" = true ]; then
        log "Installing minimal GNOME desktop..."
        pacman -S --noconfirm gnome-shell gnome-terminal gnome-control-center gnome-tweaks || {
            log "ERROR: Failed to install minimal GNOME desktop"
            exit 1
        }
    else
        log "Installing full GNOME desktop..."
        pacman -S --noconfirm gnome gnome-extra || {
            log "ERROR: Failed to install GNOME desktop"
            exit 1
        }
    fi
    
    # Enable GDM service
    systemctl enable gdm.service || log "Warning: Failed to enable GDM service"
    
    log "GNOME installation completed successfully on Arch Linux"
}

# Function to install GNOME on openSUSE
install_gnome_opensuse() {
    log "Installing GNOME on openSUSE..."
    
    # Update packages
    zypper refresh || {
        log "ERROR: Failed to refresh package repositories"
        exit 1
    }
    
    # Install GNOME desktop environment
    if [ "$MINIMAL" = true ]; then
        log "Installing minimal GNOME desktop..."
        zypper install -y -t pattern gnome_basis || {
            log "ERROR: Failed to install minimal GNOME desktop"
            exit 1
        }
    else
        log "Installing full GNOME desktop..."
        zypper install -y -t pattern gnome || {
            log "ERROR: Failed to install GNOME desktop"
            exit 1
        }
    fi
    
    # Set default target to graphical
    systemctl set-default graphical.target || log "Warning: Failed to set default target to graphical"
    
    log "GNOME installation completed successfully on openSUSE"
}

# Display usage information
show_usage() {
    cat << EOF
Usage: $0 [options]

Options:
  -h, --help     Show this help message and exit
  -v, --verbose  Enable verbose output
  -m, --minimal  Install minimal GNOME desktop
  -y, --yes      Automatic yes to prompts

Description:
  This script automatically installs the GNOME desktop environment
  on various Linux distributions without requiring user intervention.
EOF
}

# Parse command-line arguments
parse_args() {
    while [ "$#" -gt 0 ]; do
        case "$1" in
            -h|--help)
                show_usage
                exit 0
                ;;
            -v|--verbose)
                VERBOSE=true
                shift
                ;;
            -m|--minimal)
                MINIMAL=true
                shift
                ;;
            -y|--yes)
                AUTO_YES=true
                shift
                ;;
            *)
                echo "Unknown option: $1"
                show_usage
                exit 1
                ;;
        esac
    done
}

# Main function
main() {
    # Initialize variables
    MINIMAL=false
    AUTO_YES=false
    
    # Parse command-line arguments
    parse_args "$@"
    
    # Check for root privileges
    check_root
    
    log "=== Starting GNOME Installation ==="
    log "Script version: 1.0"
    
    # Detect Linux distribution
    detect_distro
    
    # Ask for confirmation unless --yes is specified
    if [ "$AUTO_YES" != true ]; then
        echo "This script will install GNOME desktop environment on your $DISTRO system."
        echo "Do you want to continue? (y/N): "
        read -r answer
        if [[ ! "$answer" =~ ^[Yy]$ ]]; then
            log "Installation aborted by user"
            exit 0
        fi
    fi
    
    # Install GNOME based on detected distribution
    case "$DISTRO" in
        ubuntu|debian|linuxmint|pop)
            install_gnome_debian
            ;;
        fedora|rhel|centos|rocky|almalinux|oracle)
            install_gnome_fedora
            ;;
        arch|manjaro|endeavouros)
            install_gnome_arch
            ;;
        opensuse*|suse|sles)
            install_gnome_opensuse
            ;;
        *)
            log "ERROR: Unsupported distribution: $DISTRO"
            echo "This script supports Ubuntu, Debian, Fedora, RHEL, CentOS, Arch Linux, and openSUSE."
            echo "For other distributions, please use the generic Unix script: install_gnome_unix.sh"
            exit 1
            ;;
    esac
    
    log "=== GNOME Installation Completed Successfully ==="
    echo "GNOME has been successfully installed on your system."
    echo "You should restart your system to start using GNOME."
    echo "Log file is available at: $LOG_FILE"
}

# Run the main function with all passed arguments
main "$@"